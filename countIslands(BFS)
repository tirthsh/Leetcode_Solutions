#https://leetcode.com/problems/number-of-islands/

class Solution:
    def numIslands(self, grid: List[List[str]]) -> int:
        count = 0
        #iterate over each in the grid
        for i in range(0, len(grid)):
            for j in range(0, len(grid[i])):
                if (grid[i][j] == '1'):
                    count += 1
                    self.callBFS(grid, i, j)
        return count
    
    #this method recursively identifies islands
    def callBFS(self, grid, i, j):
        #boundry check
        if (i < 0 or i > len(grid)-1 or j < 0 or j > len(grid[i])-1 or grid[i][j] == '0'):
            return ;
        #once counted, make it to 0
        grid[i][j] = '0'
        self.callBFS(grid, i - 1, j)
        self.callBFS(grid, i + 1, j)
        self.callBFS(grid, i, j - 1)
        self.callBFS(grid, i, j + 1)
